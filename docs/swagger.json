{
    "swagger": "2.0",
    "info": {
        "description": "This is a RESTful API for a chess server featuring parallel games for bot experimentation.",
        "title": "Chessbot Playground API",
        "contact": {
            "name": "Mate Tirpak",
            "url": "https://github.com/matetirpak",
            "email": "mate.tirpak@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://github.com/matetirpak/chessbot-playground/blob/main/LICENSE"
        },
        "version": "1.0"
    },
    "basePath": "/chessserver/v1",
    "paths": {
        "/chessserver/v1/game": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Requesting the board state requires the 'moveidx' parameter. Requesting possible moves of a piece requires 'row' and 'col'. 'turn' holds the request till it's the players turn.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "game"
                ],
                "summary": "Extract board, possible moves or wait for a turn notification",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Index of move (for board state)",
                        "name": "moveidx",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Board ID",
                        "name": "boardid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Color ('w' or 'b')",
                        "name": "color",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Row of piece (for moves)",
                        "name": "row",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Column of piece (for moves)",
                        "name": "col",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Request type: 'state', 'turn' or 'moves'",
                        "name": "reqtype",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns one of: BoardState (reqtype=state), []RespMove (reqtype=moves), or {} (reqtype=turn)\". Defined at internal/api/structs.go",
                        "schema": {}
                    },
                    "400": {
                        "description": "Bad request (invalid parameters or out-of-range index)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized (missing/invalid token)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not found – Game does not exist",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "408": {
                        "description": "Timeout waiting for turn",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error during move generation",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Applies a specified (valid) move, random move, or forfeits the game. Applying a specific move requires the move variable, e.g. \"e2 e4\".",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "game"
                ],
                "summary": "Applies an action to a game",
                "parameters": [
                    {
                        "description": "reqtype: 'move' (requires 'move' variable), 'randommove', 'forfeit'",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ReqPutGame"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success (No Content)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid parameters, move, or game state)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized (missing or invalid token)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not found – Game does not exist",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error during move processing",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/chessserver/v1/sessions": {
            "get": {
                "description": "Returns a list of all existing sessions. No request body or parameters are required.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Displays all existing sessions",
                "responses": {
                    "200": {
                        "description": "List of all game sessions",
                        "schema": {
                            "$ref": "#/definitions/api.RespGetSessions"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Registers a player (white or black) to an existing game session using the board ID and a session password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Register as a player in a session",
                "parameters": [
                    {
                        "description": "Request payload with session access data and desired color",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ReqPutSessions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Color-specific Player token",
                        "schema": {
                            "$ref": "#/definitions/api.RespPutSessions"
                        }
                    },
                    "400": {
                        "description": "Bad request – Invalid JSON or color value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized – Missing or invalid bearer token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden – Game is full or color already taken",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not found – Game session does not exist",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Initializes a new session in the server. The response contains an ID and password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Creates a new session",
                "parameters": [
                    {
                        "description": "Request payload with desired session name",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ReqPostSessions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Session/Board ID and password",
                        "schema": {
                            "$ref": "#/definitions/api.RespPostSessions"
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid JSON body)",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Given the board-id, deletes the session if the correct session token was provided.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Deletes a session",
                "parameters": [
                    {
                        "description": "Request payload with board-id",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ReqDeleteSessions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success (No Content)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid JSON body)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized (missing or invalid session token)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not found – Game session does not exist",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.GameNameAndID": {
            "type": "object",
            "properties": {
                "boardid": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.ReqDeleteSessions": {
            "type": "object",
            "properties": {
                "boardid": {
                    "type": "integer"
                }
            }
        },
        "api.ReqPostSessions": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "api.ReqPutGame": {
            "type": "object",
            "properties": {
                "boardid": {
                    "type": "integer"
                },
                "color": {
                    "type": "string"
                },
                "move": {
                    "type": "string"
                },
                "reqtype": {
                    "description": "\"forfeit\" \"move\" \"randommove\"",
                    "type": "string"
                }
            }
        },
        "api.ReqPutSessions": {
            "type": "object",
            "properties": {
                "boardid": {
                    "type": "integer"
                },
                "color": {
                    "type": "string"
                }
            }
        },
        "api.RespGetSessions": {
            "type": "object",
            "properties": {
                "games": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.GameNameAndID"
                    }
                }
            }
        },
        "api.RespPostSessions": {
            "type": "object",
            "properties": {
                "boardid": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "api.RespPutSessions": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        }
    }
}